// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Contexts;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GrievanceEmployee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "GrievanceId");

                    b.HasIndex("GrievanceId");

                    b.ToTable("GrievanceEmployee");
                });

            modelBuilder.Entity("WebApi.Models.DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8692),
                            IsActive = true,
                            Name = "Application Management",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8693)
                        });
                });

            modelBuilder.Entity("WebApi.Models.DesignationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EscalationLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EscalationLevel")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8919),
                            EscalationLevel = 100,
                            IsActive = true,
                            Name = "Employee",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8920)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8922),
                            EscalationLevel = 200,
                            IsActive = true,
                            Name = "HR Manager",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8922)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8923),
                            EscalationLevel = 300,
                            IsActive = true,
                            Name = "Senior HR Manager",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8924)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8925),
                            EscalationLevel = 400,
                            IsActive = true,
                            Name = "Grievance Manager",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8925)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8926),
                            EscalationLevel = 500,
                            IsActive = true,
                            Name = "Aduitor",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8927)
                        });
                });

            modelBuilder.Entity("WebApi.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OpenGrievanceCount")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9484),
                            DepartmentId = 1,
                            DesignationId = 1,
                            Email = "sakthisanthosh010303+admin@gmail.com",
                            FullName = "Admin",
                            IsActive = true,
                            OpenGrievanceCount = 0,
                            PasswordHash = "AOh9uN10IO98hnsA7ah1q1pLCuHpkTnucOwnxYCDmTp7H3Hw",
                            Phone = "+1 42547 45247",
                            RoleId = 1,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9485),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 613, DateTimeKind.Utc).AddTicks(427),
                            DepartmentId = 1,
                            DesignationId = 2,
                            Email = "sakthisanthosh010303+manager1@gmail.com",
                            FullName = "Manager-1",
                            IsActive = true,
                            OpenGrievanceCount = 0,
                            PasswordHash = "aduKNy3Je1nlDpAChIE+nruYqGv/Ks8cVB1TqgfX1Qu19wgy",
                            Phone = "+1 42547 45607",
                            RoleId = 2,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 613, DateTimeKind.Utc).AddTicks(427),
                            Username = "manager1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 625, DateTimeKind.Utc).AddTicks(9828),
                            DepartmentId = 1,
                            DesignationId = 2,
                            Email = "sakthisanthosh010303+manager2@gmail.com",
                            FullName = "Manager-2",
                            IsActive = true,
                            OpenGrievanceCount = 0,
                            PasswordHash = "8HNo5z0HU7Y19CJcIQVKxroOjfpIp7GDBE/0kVK9ELrK3tdM",
                            Phone = "+1 42547 45640",
                            RoleId = 2,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 625, DateTimeKind.Utc).AddTicks(9829),
                            Username = "manager2"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 639, DateTimeKind.Utc).AddTicks(69),
                            DepartmentId = 1,
                            DesignationId = 3,
                            Email = "sakthisanthosh010303+manager3@gmail.com",
                            FullName = "Manager-3",
                            IsActive = true,
                            OpenGrievanceCount = 0,
                            PasswordHash = "BL9z+Ti2gx7CXxzH7mgNDoT1HoYRjEQMviPA9AWM6d6KNCRR",
                            Phone = "+1 42547 45647",
                            RoleId = 2,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 639, DateTimeKind.Utc).AddTicks(69),
                            Username = "manager3"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 652, DateTimeKind.Utc).AddTicks(1424),
                            DepartmentId = 1,
                            DesignationId = 1,
                            Email = "sakthisanthosh010303@gmail.com",
                            FullName = "Sakthi Santhosh",
                            IsActive = true,
                            OpenGrievanceCount = 0,
                            PasswordHash = "hq3GIJdhFcqDWnxS+5cilbl6qz3MHiTKi8kEehHkpD3/TGE7",
                            Phone = "+1 42547 45248",
                            RoleId = 3,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 652, DateTimeKind.Utc).AddTicks(1425),
                            Username = "sakthisanthosh"
                        });
                });

            modelBuilder.Entity("WebApi.Models.FileAttachmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SubmittedWithGrievanceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BlobName")
                        .IsUnique();

                    b.HasIndex("SubmittedWithGrievanceId");

                    b.ToTable("FileAttachment");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("GrievanceCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9197),
                            Description = "Issues related to unwanted and inappropriate behavior or comments at work, including bullying and discrimination.",
                            IsActive = true,
                            Name = "Workplace Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9198)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9201),
                            Description = "Concerns about unequal or biased treatment in the workplace, including favoritism or discrimination.",
                            IsActive = true,
                            Name = "Unfair Treatment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9201)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9202),
                            Description = "Problems related to the physical safety and well-being of employees, including unsafe working conditions or practices.",
                            IsActive = true,
                            Name = "Workplace Safety",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9202)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9203),
                            Description = "Challenges related to balancing work responsibilities with personal life, including excessive work hours or lack of flexibility.",
                            IsActive = true,
                            Name = "Work-life Balance",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9204)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9205),
                            Description = "Concerns regarding management practices, including poor leadership, lack of support, or ineffective communication.",
                            IsActive = true,
                            Name = "Managerial Issues",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9205)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9206),
                            Description = "Issues involving ethical conduct or integrity, such as conflicts of interest, fraud, or violations of company policies.",
                            IsActive = true,
                            Name = "Ethics and Integrity",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9206)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9207),
                            Description = "Problems related to company policies or administrative procedures, including inconsistent policy enforcement or bureaucratic hurdles.",
                            IsActive = true,
                            Name = "Administrative and Policy Issues",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9208)
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9209),
                            Description = "Issues related to general conduct and behavior within the workplace, including breaches of company standards or norms.",
                            IsActive = true,
                            Name = "Workplace Conduct",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9209)
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9210),
                            Description = "Concerns about pay, benefits, and other forms of compensation, including disputes over salary, bonuses, or benefits packages.",
                            IsActive = true,
                            Name = "Compensation and Benefits",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9210)
                        });
                });

            modelBuilder.Entity("WebApi.Models.GrievanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GrievancePriorityId")
                        .HasColumnType("int");

                    b.Property<int>("GrievanceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("GrievanceSubcategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("GrievancePriorityId");

                    b.HasIndex("GrievanceStatusId");

                    b.HasIndex("GrievanceSubcategoryId");

                    b.ToTable("Grievance");
                });

            modelBuilder.Entity("WebApi.Models.GrievancePriorityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PriorityLevel")
                        .IsUnique();

                    b.ToTable("GrievancePriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9111),
                            IsActive = true,
                            Name = "Low",
                            PriorityLevel = 100,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9111)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9114),
                            IsActive = true,
                            Name = "Medium",
                            PriorityLevel = 200,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9115)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9116),
                            IsActive = true,
                            Name = "High",
                            PriorityLevel = 300,
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9117)
                        });
                });

            modelBuilder.Entity("WebApi.Models.GrievanceResponseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("GrievanceId");

                    b.ToTable("GrievanceResponse");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GrievanceStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9149),
                            IsActive = true,
                            Name = "Pending",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9150)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9152),
                            IsActive = true,
                            Name = "Approved",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9152)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9153),
                            IsActive = true,
                            Name = "Rejected",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9153)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9154),
                            IsActive = true,
                            Name = "Under Review",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9155)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9155),
                            IsActive = true,
                            Name = "Resolved",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9156)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9157),
                            IsActive = true,
                            Name = "Escalated",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9157)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9158),
                            IsActive = true,
                            Name = "Withdrawn",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9158)
                        });
                });

            modelBuilder.Entity("WebApi.Models.GrievanceSubcategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GrievanceCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("GrievanceCategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GrievanceSubcategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9251),
                            GrievanceCategoryId = 1,
                            IsActive = true,
                            Name = "Sexual Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9251)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9256),
                            GrievanceCategoryId = 1,
                            IsActive = true,
                            Name = "Verbal Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9256)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9257),
                            GrievanceCategoryId = 1,
                            IsActive = true,
                            Name = "Physical Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9258)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9259),
                            GrievanceCategoryId = 1,
                            IsActive = true,
                            Name = "Psychological Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9259)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9260),
                            GrievanceCategoryId = 1,
                            IsActive = true,
                            Name = "Racial or Ethnic Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9260)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9261),
                            GrievanceCategoryId = 1,
                            IsActive = true,
                            Name = "Gender-based Harassment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9261)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9262),
                            GrievanceCategoryId = 2,
                            IsActive = true,
                            Name = "Favoritism",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9263)
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9264),
                            GrievanceCategoryId = 2,
                            IsActive = true,
                            Name = "Discrimination",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9264)
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9265),
                            GrievanceCategoryId = 2,
                            IsActive = true,
                            Name = "Unequal Pay",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9265)
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9266),
                            GrievanceCategoryId = 2,
                            IsActive = true,
                            Name = "Unequal Promotion Opportunities",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9267)
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9268),
                            GrievanceCategoryId = 2,
                            IsActive = true,
                            Name = "Inconsistent Application of Rules",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9268)
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9270),
                            GrievanceCategoryId = 2,
                            IsActive = true,
                            Name = "Lack of Recognition",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9270)
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9271),
                            GrievanceCategoryId = 3,
                            IsActive = true,
                            Name = "Unsafe Equipment",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9272)
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9273),
                            GrievanceCategoryId = 3,
                            IsActive = true,
                            Name = "Hazardous Work Conditions",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9273)
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9275),
                            GrievanceCategoryId = 3,
                            IsActive = true,
                            Name = "Inadequate Safety Training",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9275)
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9276),
                            GrievanceCategoryId = 3,
                            IsActive = true,
                            Name = "Lack of Personal Protective Equipment (PPE)",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9276)
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9277),
                            GrievanceCategoryId = 3,
                            IsActive = true,
                            Name = "Emergency Preparedness",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9278)
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9279),
                            GrievanceCategoryId = 3,
                            IsActive = true,
                            Name = "Ergonomic Issues",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9279)
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9280),
                            GrievanceCategoryId = 4,
                            IsActive = true,
                            Name = "Excessive Work Hours",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9280)
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9281),
                            GrievanceCategoryId = 4,
                            IsActive = true,
                            Name = "Inflexible Work Schedules",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9282)
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9283),
                            GrievanceCategoryId = 4,
                            IsActive = true,
                            Name = "Lack of Paid Time Off",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9284)
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9285),
                            GrievanceCategoryId = 4,
                            IsActive = true,
                            Name = "Remote Work Limitations",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9285)
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9287),
                            GrievanceCategoryId = 4,
                            IsActive = true,
                            Name = "Difficulty in Taking Breaks",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9287)
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9288),
                            GrievanceCategoryId = 4,
                            IsActive = true,
                            Name = "Job Stress",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9288)
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9289),
                            GrievanceCategoryId = 5,
                            IsActive = true,
                            Name = "Poor Communication",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9290)
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9292),
                            GrievanceCategoryId = 5,
                            IsActive = true,
                            Name = "Lack of Support",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9292)
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9294),
                            GrievanceCategoryId = 5,
                            IsActive = true,
                            Name = "Micromanagement",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9294)
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9295),
                            GrievanceCategoryId = 5,
                            IsActive = true,
                            Name = "Inconsistent Feedback",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9295)
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9296),
                            GrievanceCategoryId = 5,
                            IsActive = true,
                            Name = "Unclear Expectations",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9297)
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9298),
                            GrievanceCategoryId = 5,
                            IsActive = true,
                            Name = "Favoritism in Decision-Making",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9299)
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9300),
                            GrievanceCategoryId = 6,
                            IsActive = true,
                            Name = "Conflict of Interest",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9300)
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9301),
                            GrievanceCategoryId = 6,
                            IsActive = true,
                            Name = "Fraudulent Activities",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9301)
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9302),
                            GrievanceCategoryId = 6,
                            IsActive = true,
                            Name = "Breach of Confidentiality",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9303)
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9304),
                            GrievanceCategoryId = 6,
                            IsActive = true,
                            Name = "Violations of Company Policies",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9304)
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9305),
                            GrievanceCategoryId = 6,
                            IsActive = true,
                            Name = "Corruption",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9305)
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9306),
                            GrievanceCategoryId = 6,
                            IsActive = true,
                            Name = "Misrepresentation",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9306)
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9307),
                            GrievanceCategoryId = 7,
                            IsActive = true,
                            Name = "Inconsistent Policy Enforcement",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9308)
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9309),
                            GrievanceCategoryId = 7,
                            IsActive = true,
                            Name = "Outdated Policies",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9309)
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9310),
                            GrievanceCategoryId = 7,
                            IsActive = true,
                            Name = "Ineffective Procedures",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9310)
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9311),
                            GrievanceCategoryId = 7,
                            IsActive = true,
                            Name = "Bureaucratic Delays",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9312)
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9313),
                            GrievanceCategoryId = 7,
                            IsActive = true,
                            Name = "Lack of Policy Transparency",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9313)
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9314),
                            GrievanceCategoryId = 7,
                            IsActive = true,
                            Name = "Administrative Errors",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9314)
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9315),
                            GrievanceCategoryId = 8,
                            IsActive = true,
                            Name = "Unprofessional Behavior",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9316)
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9316),
                            GrievanceCategoryId = 8,
                            IsActive = true,
                            Name = "Attendance Issues",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9317)
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9318),
                            GrievanceCategoryId = 8,
                            IsActive = true,
                            Name = "Dress Code Violations",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9318)
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9319),
                            GrievanceCategoryId = 8,
                            IsActive = true,
                            Name = "Disruptive Behavior",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9319)
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9320),
                            GrievanceCategoryId = 8,
                            IsActive = true,
                            Name = "Misuse of Company Resources",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9321)
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9321),
                            GrievanceCategoryId = 8,
                            IsActive = true,
                            Name = "Breaches of Company Standards",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9322)
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9323),
                            GrievanceCategoryId = 9,
                            IsActive = true,
                            Name = "Salary Discrepancies",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9323)
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9324),
                            GrievanceCategoryId = 9,
                            IsActive = true,
                            Name = "Bonus Disputes",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9324)
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9325),
                            GrievanceCategoryId = 9,
                            IsActive = true,
                            Name = "Benefits Enrollment Issues",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9326)
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9327),
                            GrievanceCategoryId = 9,
                            IsActive = true,
                            Name = "Health Insurance Problems",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9327)
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9328),
                            GrievanceCategoryId = 9,
                            IsActive = true,
                            Name = "Retirement Plan Concerns",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9328)
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9329),
                            GrievanceCategoryId = 9,
                            IsActive = true,
                            Name = "Expense Reimbursement Issues",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9330)
                        });
                });

            modelBuilder.Entity("WebApi.Models.MeetingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttendeeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("GrievanceId");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("WebApi.Models.OtpModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Otp");
                });

            modelBuilder.Entity("WebApi.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8966),
                            IsActive = true,
                            Name = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(8966)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9062),
                            IsActive = true,
                            Name = "Manager",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9062)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9064),
                            IsActive = true,
                            Name = "User",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9064)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9065),
                            IsActive = true,
                            Name = "Microservice",
                            UpdatedOn = new DateTime(2024, 8, 4, 12, 51, 41, 599, DateTimeKind.Utc).AddTicks(9065)
                        });
                });

            modelBuilder.Entity("GrievanceEmployee", b =>
                {
                    b.HasOne("WebApi.Models.EmployeeModel", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.GrievanceModel", null)
                        .WithMany()
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Models.EmployeeModel", b =>
                {
                    b.HasOne("WebApi.Models.DepartmentModel", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.DesignationModel", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.RoleModel", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApi.Models.FileAttachmentModel", b =>
                {
                    b.HasOne("WebApi.Models.GrievanceModel", "SubmittedWithGrievance")
                        .WithMany("FileAttachments")
                        .HasForeignKey("SubmittedWithGrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubmittedWithGrievance");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceModel", b =>
                {
                    b.HasOne("WebApi.Models.EmployeeModel", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApi.Models.EmployeeModel", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Models.GrievancePriorityModel", "GrievancePriority")
                        .WithMany("Grievances")
                        .HasForeignKey("GrievancePriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.GrievanceStatusModel", "GrievanceStatus")
                        .WithMany("Grievances")
                        .HasForeignKey("GrievanceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.GrievanceSubcategoryModel", "GrievanceSubcategory")
                        .WithMany("Grievances")
                        .HasForeignKey("GrievanceSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("GrievancePriority");

                    b.Navigation("GrievanceStatus");

                    b.Navigation("GrievanceSubcategory");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceResponseModel", b =>
                {
                    b.HasOne("WebApi.Models.EmployeeModel", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.GrievanceModel", "Grievance")
                        .WithMany("Responses")
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Grievance");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceSubcategoryModel", b =>
                {
                    b.HasOne("WebApi.Models.GrievanceCategoryModel", "GrievanceCategory")
                        .WithMany("GrievanceSubcategories")
                        .HasForeignKey("GrievanceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrievanceCategory");
                });

            modelBuilder.Entity("WebApi.Models.MeetingModel", b =>
                {
                    b.HasOne("WebApi.Models.EmployeeModel", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.EmployeeModel", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.GrievanceModel", "Grievance")
                        .WithMany("Meetings")
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("CreatedBy");

                    b.Navigation("Grievance");
                });

            modelBuilder.Entity("WebApi.Models.DepartmentModel", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApi.Models.DesignationModel", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceCategoryModel", b =>
                {
                    b.Navigation("GrievanceSubcategories");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceModel", b =>
                {
                    b.Navigation("FileAttachments");

                    b.Navigation("Meetings");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("WebApi.Models.GrievancePriorityModel", b =>
                {
                    b.Navigation("Grievances");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceStatusModel", b =>
                {
                    b.Navigation("Grievances");
                });

            modelBuilder.Entity("WebApi.Models.GrievanceSubcategoryModel", b =>
                {
                    b.Navigation("Grievances");
                });

            modelBuilder.Entity("WebApi.Models.RoleModel", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
